services:
  app:
    build: .
    container_name: ${APP_CONTAINER_NAME:-nodejs-app}
    ports:
      - "${APP_PORT:-3000}:${APP_PORT:-3000}"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - POSTGRES_URL=${POSTGRES_URL:-postgres://postgres:postgres@postgres:5432/myapp}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    networks:
      - app-network

  postgres:
    image: "postgres:14"
    container_name: ${DB_CONTAINER_NAME:-postgres-db}
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "${DB_EXTERNAL_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
